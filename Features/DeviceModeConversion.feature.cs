// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DAX2.DTT.Convertion.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DeviceModeConversion")]
    public partial class DeviceModeConversionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DeviceModeConversion.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DeviceModeConversion", "\tAs a profession tuner for Windows platform\r\n\tI want to be able to convert device" +
                    " mode data from the tuning xml to the DAX2 Database\r\n\tSo the device mode data ca" +
                    "n be applied by the DAX2 Windows product", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have opened the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Laptop Mode")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectLaptopMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Laptop Mode", new string[] {
                        "mytag"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("I set the XML file to Tuning_File_Device_Mode.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I set the device mode to Laptop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table1.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,288,288,265,197,88,35,63,100,119,92,58,109,182,218,282,288,288,288",
                        "288,288,288,288,281,221,128,80,105,111,70,60,63,120,161,211,288,288,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-528,-528,-423,-444,-320,-480,-528,-192,-416,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-336,-336,-231,-252,-128,-288,-336,0,-224,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 18
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table2.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table2.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table2.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table2.AddRow(new string[] {
                        "internal_speaker",
                        "laptop",
                        "laptop"});
#line 23
 testRunner.Then("I should be able to query below 4 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Stand Mode")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectStandMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Stand Mode", new string[] {
                        "mytag"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 32
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.And("I set the XML file to Tuning_File_Device_Mode.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I set the device mode to Stand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table3.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,271,149,94,53,-6,-13,44,85,120,160,186,176,147,129,177,246,288,288",
                        "288,288,279,170,124,94,40,15,39,87,82,106,154,176,144,123,179,266,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-437,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-245,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 39
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table4.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table4.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table4.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table4.AddRow(new string[] {
                        "internal_speaker",
                        "stand",
                        "internal_speaker"});
            table4.AddRow(new string[] {
                        "internal_speaker",
                        "stand",
                        "stand"});
#line 44
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Tent Mode")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectTentMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Tent Mode", new string[] {
                        "mytag"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 54
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("I set the XML file to Tuning_File_Device_Mode.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I set the device mode to Tent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table5.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table5.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table5.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,278,153,110,132,53,-11,20,97,194,158,142,167,143,130,182,254,288,288",
                        "288,288,288,170,133,136,50,-10,13,73,107,105,107,141,136,147,198,252,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-416,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-224,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 61
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table6.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table6.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table6.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table6.AddRow(new string[] {
                        "internal_speaker",
                        "tent",
                        "internal_speaker"});
            table6.AddRow(new string[] {
                        "internal_speaker",
                        "tent",
                        "tent"});
#line 66
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Tablet Mode")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectTabletMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Tablet Mode", new string[] {
                        "mytag"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 76
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.And("I set the XML file to Tuning_File_Device_Mode.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I set the device mode to Tablet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table7.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table7.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table7.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,288,199,131,116,92,49,53,62,85,118,119,134,161,203,288,288,288,288",
                        "284,309,320,237,184,158,86,71,114,119,82,111,150,173,197,259,320,320,320,320",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-437,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-245,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 83
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table8.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table8.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table8.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table8.AddRow(new string[] {
                        "internal_speaker",
                        "tablet",
                        "internal_speaker"});
            table8.AddRow(new string[] {
                        "internal_speaker",
                        "tablet",
                        "tablet"});
#line 88
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Laptop mode data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateLaptopModeData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Laptop mode data", new string[] {
                        "mytag"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 99
 testRunner.When("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.And("I set the device mode to Laptop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I convert the tuning file Tuning_File_Device_Mode.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I set the device mode to Laptop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I set the XML file to Tuning_File_Device_Mode_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 110
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 112
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table9.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table9.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table9.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,288,288,265,197,88,35,63,100,119,92,58,109,182,218,282,288,288,288",
                        "288,288,288,288,281,221,128,80,105,111,70,60,63,120,161,211,288,288,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-528,-528,-423,-444,-320,-480,-528,-192,-416,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-336,-336,-231,-252,-128,-288,-336,0,-224,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "8",
                        "8",
                        "8",
                        "8",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 114
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table10.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table10.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table10.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table10.AddRow(new string[] {
                        "internal_speaker",
                        "laptop",
                        "laptop"});
#line 119
 testRunner.Then("I should be able to query below 4 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Tent mode data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateTentModeData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Tent mode data", new string[] {
                        "mytag"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 128
 testRunner.When("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
 testRunner.And("I set the device mode to Tent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I convert the tuning file Tuning_File_Device_Mode.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I set the device mode to Tent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.And("I set the XML file to Tuning_File_Device_Mode_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table11.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table11.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table11.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,278,153,110,132,53,-11,20,97,194,158,142,167,143,130,182,254,288,288",
                        "288,288,288,170,133,136,50,-10,13,73,107,105,107,141,136,147,198,252,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-416,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-224,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 143
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table12.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table12.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table12.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table12.AddRow(new string[] {
                        "internal_speaker",
                        "tent",
                        "internal_speaker"});
            table12.AddRow(new string[] {
                        "internal_speaker",
                        "tent",
                        "tent"});
#line 148
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Tablet mode data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateTabletModeData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Tablet mode data", new string[] {
                        "mytag"});
#line 157
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 158
 testRunner.When("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 159
 testRunner.And("I set the device mode to Tablet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.And("I convert the tuning file Tuning_File_Device_Mode.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I set the device mode to Tablet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("I set the XML file to Tuning_File_Device_Mode_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table13.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table13.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table13.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,288,199,131,116,92,49,53,62,85,118,119,134,161,203,288,288,288,288",
                        "284,309,320,237,184,158,86,71,114,119,82,111,150,173,197,259,320,320,320,320",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-437,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-245,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 173
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table14.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table14.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table14.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table14.AddRow(new string[] {
                        "internal_speaker",
                        "tablet",
                        "internal_speaker"});
            table14.AddRow(new string[] {
                        "internal_speaker",
                        "tablet",
                        "tablet"});
#line 178
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Stand mode data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateStandModeData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Stand mode data", new string[] {
                        "mytag"});
#line 187
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 188
 testRunner.When("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
 testRunner.And("I set the device mode to Stand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I convert the tuning file Tuning_File_Device_Mode.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I set the device mode to Stand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And("I set the XML file to Tuning_File_Device_Mode_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table15.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table15.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table15.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "288,288,271,149,94,53,-6,-13,44,85,120,160,186,176,147,129,177,246,288,288",
                        "288,288,279,170,124,94,40,15,39,87,82,106,154,176,144,123,179,266,288,288",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-1152,-549,-528,-423,-444,-320,-480,-528,-192,-437,-368,-272,-224,-192,-192,-192," +
                            "-192,-192,-288,-1152",
                        "-960,-357,-336,-231,-252,-128,-288,-336,0,-245,-176,-80,-32,0,0,0,0,0,-96,-960",
                        "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1",
                        "160",
                        "445",
                        "12",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "165",
                        "765",
                        "50",
                        "192",
                        "3",
                        "0",
                        "-178",
                        "-249",
                        "12",
                        "12",
                        "12",
                        "12",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "3",
                        "1"});
#line 203
 testRunner.Then("I should be able to query below 3 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Endpoint_Port",
                        "Mode",
                        "Description"});
            table16.AddRow(new string[] {
                        "internal_speaker",
                        "normal",
                        "internal_speaker"});
            table16.AddRow(new string[] {
                        "bluetooth",
                        "normal",
                        "bluetooth"});
            table16.AddRow(new string[] {
                        "usb",
                        "normal",
                        "usb"});
            table16.AddRow(new string[] {
                        "internal_speaker",
                        "stand",
                        "internal_speaker"});
            table16.AddRow(new string[] {
                        "internal_speaker",
                        "stand",
                        "stand"});
#line 208
   testRunner.Then("I should be able to query below 5 new records in the table Device_Endpoints of th" +
                    "e DAX2 DB", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
