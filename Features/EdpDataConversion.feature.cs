// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DAX2.DTT.Convertion.Test.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EdpDataConversion")]
    public partial class EdpDataConversionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EdpDataConversion.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EdpDataConversion", "\tAs a profession tuner for Windows platform\r\n\tI want to be able to convert endpoi" +
                    "nt data from the tuning xml to the DAX2 Database\r\n\tSo the endpoint data can be a" +
                    "pplied by the DAX2 Windows product", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have opened the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Speaker data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectSpeakerData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Speaker data", new string[] {
                        "mytag"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("I set the XML file to Tuning_File_Endpoint.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table1.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
#line 18
 testRunner.Then("I should be able to query below 2 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Speaker data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateSpeakerData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Speaker data", new string[] {
                        "mytag"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
 testRunner.When("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And("I convert the tuning file Tuning_File_Endpoint.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I set the endpoint to Speaker", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I set the XML file to Tuning_File_Endpoint_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table2.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table2.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
#line 38
 testRunner.Then("I should be able to query below 2 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select Headphone data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SelectHeadphoneData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select Headphone data", new string[] {
                        "mytag"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
 testRunner.When("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.And("I set the XML file to Tuning_File_Endpoint.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I set the endpoint to Headphone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "96",
                        "100",
                        "24",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "100",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "160",
                        "150",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "known",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "96",
                        "150",
                        "24",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "100",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table3.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "47,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "200",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "10",
                        "10",
                        "10",
                        "10",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
#line 52
 testRunner.Then("I should be able to query below 8 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Headphone data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void UpdateHeadphoneData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Headphone data", new string[] {
                        "mytag"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 65
 testRunner.When("I set the endpoint to Headphone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.And("I convert the tuning file Tuning_File_Endpoint.xml to the database DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.When("I open the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.And("I set the DB file to DAX2.sdf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I set the XML file to Tuning_File_Endpoint_Update.xml", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I set the endpoint to Headphone", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When("I click on the convert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("I should see a message box with the title Already Exists and the message Entries " +
                    "with same System ID exists in the DB.. Would you like to Replace? shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
 testRunner.When("I press Yes button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("I should see a message box with the title Great News and the message Successfully" +
                    " Converted the XML to Database shows up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.When("I press OK button on the message box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.And("I close the DTT conversion tool", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "profile_restrictions",
                        "classification",
                        "endpoint_type",
                        "mono_device",
                        "has_sub",
                        "tuned_rate",
                        "audio_optimizer_bands_Frequency",
                        "audio_optimizer_bands_Gain0",
                        "audio_optimizer_bands_Gain1",
                        "audio_optimizer_bands_Gain2",
                        "audio_optimizer_bands_Gain3",
                        "audio_optimizer_bands_Gain4",
                        "audio_optimizer_bands_Gain5",
                        "audio_optimizer_bands_Gain6",
                        "audio_optimizer_bands_Gain7",
                        "audio_optimizer_bands_Gain8",
                        "audio_optimizer_bands_Gain9",
                        "process_optimizer_bands_Frequency",
                        "process_optimizer_bands_Gain0",
                        "process_optimizer_bands_Gain1",
                        "process_optimizer_bands_Gain2",
                        "process_optimizer_bands_Gain3",
                        "process_optimizer_bands_Gain4",
                        "process_optimizer_bands_Gain5",
                        "process_optimizer_bands_Gain6",
                        "process_optimizer_bands_Gain7",
                        "process_optimizer_bands_Gain8",
                        "process_optimizer_bands_Gain9",
                        "audio_regulator_frequency",
                        "audio_regulator_threshold_low",
                        "audio_regulator_threshold_high",
                        "audio_regulator_isolated_band",
                        "bass_enhancer_boost",
                        "bass_enhancer_cutoff_frequency",
                        "bass_enhancer_width",
                        "bass_extraction_cutoff_frequency",
                        "height_filter_mode",
                        "regulator_overdrive",
                        "regulator_timbre_preservation",
                        "regulator_relaxation_amount",
                        "virtual_bass_overall_gain",
                        "virtual_bass_slope_gain",
                        "virtual_bass_mix_freqs_low",
                        "virtual_bass_mix_freqs_high",
                        "virtual_bass_src_freqs_low",
                        "virtual_bass_src_freqs_high",
                        "virtual_bass_subgains_num",
                        "virtual_bass_subgains_harmonic_2",
                        "virtual_bass_subgains_harmonic_3",
                        "virtual_bass_subgains_harmonic_4",
                        "virtualizer_speaker_angle",
                        "virtualizer_front_speaker_angle",
                        "virtualizer_height_speaker_angle",
                        "virtualizer_surround_speaker_angle",
                        "volume_modeler_calibration",
                        "intermediate_tuning_audio_optimizer_enable",
                        "intermediate_tuning_bass_enhancer_enable",
                        "intermediate_tuning_bass_extraction_enable",
                        "intermediate_tuning_process_optimizer_enable",
                        "intermediate_tuning_regulator_enable",
                        "intermediate_tuning_regulator_speaker_dist_enable",
                        "intermediate_tuning_surround_decoder_enable",
                        "intermediate_tuning_volume_modeler_enable",
                        "intermediate_tuning_partial_output_mode_channels",
                        "intermediate_tuning_partial_output_mode_mixmatrix",
                        "intermediate_tuning_partial_virtual_bass_enable",
                        "intermediate_tuning_partial_virtual_bass_mode",
                        "intermediate_tuning_partial_virtualizer_enable"});
            table4.AddRow(new string[] {
                        "none",
                        "known",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "50,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "0,96,128,128,128,112,64,48,16,0,16,-50,-244,-102,-24,-26,-28,-30,-32,-16",
                        "50,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "50,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "96",
                        "150",
                        "24",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "13",
                        "13",
                        "13",
                        "13",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "1",
                        "0",
                        "0",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "internal_speaker",
                        "speaker",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "192",
                        "200",
                        "16",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "1",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "49,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "100",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "12",
                        "12",
                        "12",
                        "12",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,12,12,12,14,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "48,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "96",
                        "100",
                        "24",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "11",
                        "11",
                        "11",
                        "11",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,12,14,16",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "45,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "100",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "99",
                        "281",
                        "30",
                        "90",
                        "3",
                        "-48",
                        "-480",
                        "-240",
                        "8",
                        "8",
                        "8",
                        "8",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "0",
                        "0",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "44,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "-32,64,80,80,80,48,48,48,48,80,-64,-336,-190,-84,-102,-60,-64,-68,-70,-62",
                        "44,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "44,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "160",
                        "150",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "14",
                        "14",
                        "14",
                        "14",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
            table4.AddRow(new string[] {
                        "none",
                        "unknown_headphone",
                        "headphone",
                        "0",
                        "0",
                        "48000",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "-16,16,32,32,32,48,48,32,-16,-96,-64,-62,-60,-90,-56,-4,-4,-4,-2,-16",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "46,141,234,328,469,656,844,1031,1313,1688,2250,3000,3750,4688,5813,7125,9000,1125" +
                            "0,13875,19688",
                        "-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-192,-" +
                            "192,-192,-192,-192",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
                        "144",
                        "200",
                        "32",
                        "200",
                        "0",
                        "0",
                        "12",
                        "96",
                        "0",
                        "0",
                        "94",
                        "469",
                        "35",
                        "160",
                        "3",
                        "-32",
                        "-144",
                        "-192",
                        "9",
                        "9",
                        "9",
                        "9",
                        "0",
                        "1",
                        "1",
                        "0",
                        "0",
                        "1",
                        "1",
                        "1",
                        "0",
                        "2",
                        "",
                        "0",
                        "1",
                        "1"});
#line 78
 testRunner.Then("I should be able to query below 8 new records in the table Device_Tuning of the D" +
                    "AX2 DB", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
